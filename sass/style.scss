/*
    Modificaciones de Bootstrap
*/

//Color
$primary : rgb(5, 138, 255);
$secondary : rgba(21, 43, 90, 1);
$tertiary : rgba(22, 19, 72, 1);

$theme-colors: (
    "tertiary": $tertiary
);

//Body
$body-color: $secondary;

//Ajustes L/D
$yiq-text-dark: $secondary;

//Tipografía
$font-family-base: Inter;

$headings-font-weight: 700;
$headings-margin-bottom: 1rem;

//Contenedores
$container-max-widths: (
    sm: 340px,
    md: 818px,
    lg: 960px,
    xl: 960px
);

//Espaciado
$spacer : 1rem;
$spacers : (
    6 : ($spacer * 6)
);

//Esquinas
$corners : 'tl', 'tr', 'br', 'bl';

//Dirección
$directions : 'left', 'right';

/*
    Carga de Bootstrap
*/

@import 'bootstrap';

/*
    Extra
*/



//Altura
/*"Viewport height" menos 20%*/
$alt-vh-desc : 20;
.min-vh-100-desc {
    min-height: (100vh - $alt-vh-desc);
}


//Sombreado
$box-shadow-ct-sm: 0 0 .25rem rgba($black, .075);
$box-shadow-ct: 0 0 1rem rgba($black, .15);
$box-shadow-ct-lg: 0 0 3rem rgba($black, .175);

.shadow-ct-sm { box-shadow: $box-shadow-ct-sm !important; }
.shadow-ct { box-shadow: $box-shadow-ct !important; }
.shadow-ct-lg { box-shadow: $box-shadow-ct-lg !important; }

//Ajustes contrastes
@mixin cste-color ($parent, $color, $ignore-warning: false) {
    $colorTexto : color-yiq($color);

    #{$parent}:not(.preserve) {
        color: $colorTexto;

        & * {
            color: $colorTexto;
        }

        & a:hover {
            color: fade-out($colorTexto, 0.2);
        }

        .btn {
            background-color: $colorTexto;
            color: color-yiq($colorTexto);

            & * {
                color: color-yiq($colorTexto);
            }

            &:hover {
                background-color: darken($colorTexto, 6%);
                color: color-yiq($colorTexto);
            }
        }

        & hr {
            border-color: fade-out(color-yiq($color), 0.8);
        }
    }
}

@each $color, $value in $theme-colors {
    @include cste-color(".bg-#{$color}", $value, true);
}

//Contenedor expandido a un lado
@mixin gen-col ($ciclo, $bp: '', $side) {
    .col#{$bp}-#{$ciclo} {
        padding-#{$side}: 0;
    }
}

@mixin make-container-fluid-side-max-widths ($side, $max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
    margin-#{$side}: 0;
    padding-#{$side}: 0;

    .row {
        margin-#{$side}: 0;
    }

    @each $breakpoint, $value in $breakpoints {
        @if ($breakpoint =='xs') {
            @for $i from 0 through 13 {
                @if ($i ==0) {
                    .col {
                        padding-#{$side}: 0;
                    }
                }

                @else if ($i > 0 and $i < 13) {
                    @include gen-col($i, '', $side);
                }

                @else {
                    @include gen-col('auto', '', $side);
                }
            }
        }

        @else {
            @for $i from 0 through 13 {
                @if ($i ==0) {
                    .col-#{$breakpoint} {
                        padding-#{$side}: 0;
                    }
                }

                @else if ($i > 0 and $i < 13) {
                    @include gen-col($i, '-#{$breakpoint}', $side);
                }

                @else {
                    @include gen-col('auto', '-#{$breakpoint}', $side);
                }
            }
        }
    }

    @each $breakpoint, $container-max-width in $max-widths {
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            max-width: calc(100% - (100% - #{$container-max-width}) / 2);
        }
    }
}

.container-fluid-left {
    @include make-container();
    @include make-container-fluid-side-max-widths('left');
}

.container-fluid-right {
    @include make-container();
    @include make-container-fluid-side-max-widths('right');
}


//Ajustes premios
//Borde enlace
.border-link {
    border-top: none!important;
    border-right: none!important;
    border-bottom: 5px solid $secondary !important;
    border-left: none!important;
    border-radius: 0;
}

.contenedor-premios {
    & .col:nth-child(odd) {
        padding-top: $spacer * 3;
    }

    & .col:nth-child(even) {
        padding-bottom: $spacer * 3;
    }

    .card {
        transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);
        background-color: #fff;
    }

    img {
        -webkit-filter: brightness(1) invert(0);
                filter: brightness(1) invert(0);
        transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    }

    .card:hover {
        background-color: $secondary;
        color: #fff;
        transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);

        img {
            -webkit-filter: brightness(0) invert(1);
                    filter: brightness(0) invert(1);
            transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);
        }

        a {
            color: #fff !important;
        }

        .border-link {
            text-decoration: none;
            border-color: #fff !important;
            color: #fff !important;
        }        
    }
}

//Secciones "Skewed"
@each $color, $value in $theme-colors {
    .skewed-section-#{$color} {
        position: relative;

        & > div {
            position: relative;
            z-index: 2;
        }

        &::after {
            content : '';
            width: 100%;
            height: 103px;
            position: absolute;
            bottom: -8%;
            background-color: #{$value};
            transform: skewY(-2deg);
            z-index: 0;
        }

        & + section {
            padding-top : $spacer * 7;
        }
    }
}

//Bloques tecnología
.block-tech {
    height: 800px;

    & > div {
        flex: 0;
        padding-top: $spacer;
        padding-bottom: $spacer;
    }
}

.prf-no-image {
    display: block;
    padding: 0.5rem;
    word-wrap: normal;
    border-radius: 50%;
    height: 40px;
    width: 40px;
    text-align: center;
}

//Grupo de imágenes de perfil
.ppic-group {
    img {
        border: 2px solid #fff;
        margin-left: -14px;
        border-radius: 50%;
    }

    img:nth-child(1) {
        margin-left: 0;
    }
}

//Botón de videos esquinas
@each $corner in $corners {
    @if ($corner == 'tl') {
        .img-video.cn-#{$corner} > .btn {
            position: absolute;        
            left: 5%;
            top: 5%;
        }
    } @else if ($corner == 'tr') {
        .img-video.cn-#{$corner} > .btn {
            position: absolute;        
            right: 5%;
            top: 5%;
        }
    } @else if ($corner == 'br') {
        .img-video.cn-#{$corner} > .btn {
            position: absolute;        
            right: 5%;
            bottom: 5%;
        }
    } @else if ($corner == 'bl') {
        .img-video.cn-#{$corner} > .btn {
            position: absolute;        
            left: 5%;
            bottom: 5%;
        }
    }
}

//Display grid
.d-grid {
    display: grid !important;
    grid-auto-rows: 60px;
    grid-template-columns: repeat(5, 1fr);
    row-gap: 0px;
    -moz-column-gap: 0px;
         column-gap: 0px;
}

//Bordes redondeados
$default-corner : $font-size-base * 6;

@each $corner in $corners {
    @if ($corner == 'tl') {
        .rounded-corner-#{$corner} {
            border-top-left-radius : $default-corner;
        }
    } @else if ($corner == 'tr') {
        .rounded-corner-#{$corner} {
            border-top-right-radius : $default-corner;
        }
    } @else if ($corner == 'br') {
        .rounded-corner-#{$corner} {
            border-bottom-right-radius : $default-corner;
        }
    } @else if ($corner == 'bl') {
        .rounded-corner-#{$corner} {
            border-bottom-left-radius : $default-corner;
        }
    }
}

//Conectar secciones
@mixin ptn-pleca ($dir) {
    &::after {
        content: '';
        display: block;
        background-image: url(../images/pleca.svg);
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        height: 90px;
        width: 70px;
        position: absolute;
        bottom: 100%;
        @if ($dir == 'left') {
            right: 100%;
            transform: translateY(-50%) scale(1.5);
        } @else {
            left: 100%;
            transform: translateY(50%) scale(1.5) scaleX(-1)
        }
        z-index: -1;
    }
}

@each $direction in $directions {
    @if ($direction == 'left') {
        .cl-#{$direction} {
            position: relative;
            @include ptn-pleca($direction);
        }
    } @else {
        .cl-#{$direction} {
            position: relative;
            @include ptn-pleca($direction);
        }
    }
}